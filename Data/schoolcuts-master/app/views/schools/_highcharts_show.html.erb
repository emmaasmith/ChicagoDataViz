<script>
$(function () {
	var enrollment_chart, isat_chart, mobility_chart, race_chart;
    $(document).ready(function() {

    	//ENROLLMENT CHART
        enrollment_chart = new Highcharts.Chart({
            chart: {
                renderTo: 'chart-enrollment',
                type: 'line'
            },
            credits: { enabled: false },
            legend: { enabled:false },
            plotOptions: {
	            line: {
	            	marker: {
		            	lineColor: "#fff",
		            	lineWidth: 1.5,
		            	radius: 5
	            	}
	            }
            },
            series: [{
            	color: "#3b5cb2",
                name: 'Number of students enrolled',
                data: <%= raw @enrollment_totals %>,
                pointStart: Date.UTC(<%= raw @first_enrollment_year %>, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            }],
            subtitle: { text: ''}, 
            title: { text: '' },
            tooltip: {
                formatter: function() {
                        return '<b>'+ this.series.name +'</b><br/>'+
                        Highcharts.dateFormat('%Y', this.x) +': '+ this.y;
                }
            },
            xAxis: {
            	gridLineColor: "#dfdfdf",
                gridLineWidth: 1,
            	plotBands: [{
	                color: '#FCFFC5',
	                from: Date.UTC(2010, 0, 0),
	                to: Date.UTC(2013, 0, 0)
                }],                
                tickLength: 0,
                type: "datetime"
            },
            yAxis: {
            	gridLineColor: "#dfdfdf",
            	min: 0,
            	labels: {
	            	formatter: function(){
		            	return this.value;
	            	}
            	},
            	lineWidth: 1,
            	tickLength: 0,
                title: {
                    text: 'Number of students enrolled'
                }
            }
        });
        
        //ISAT CHART
        isat_chart = new Highcharts.Chart({
            chart: {
                renderTo: 'chart-isat',
                type: 'line'
            },
            credits: { enabled: false },
            /* 
            legend: {
            	borderWidth: 0,
            	itemWidth: 200,
            	symbolWidth: 40
            },*/	
            legend : {
	        	borderWidth: 0,
	        	itemWidth: 130,
	        	symbolWidth: 40
            },		
            plotOptions: {
	            line: {
	            	marker: {
		            	lineColor: "#fff",
		            	lineWidth: 1.5,
		            	radius: 4,
		            	symbol: "circle"
	            	}
	            }
            },
            series: [{
                color: "#1F88EA",
                name: 'Reading',
                data: <%= raw @school.reading.sort_by{|s| s.year_from}.collect{|s| s.percent}.to_json %>,
                pointStart: Date.UTC(<%= raw @school.reading.first.year_to.to_i %>, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            },/*
	        {
                color: "#1F88EA",
                name: 'Reading: CPS Average',
                dashStyle: "ShortDash",
                data: [53,58,58,70,73,83],
                pointStart: Date.UTC(2007, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            },*/			
            {
             	name: 'Math',
                color: "#9E241D",
                data: <%= raw @school.math.sort_by{|s| s.year_from}.collect{|s| s.percent}.to_json %>,
                pointStart: Date.UTC(<%= raw @school.math.first.year_to.to_i %>, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            },/*
	        {
             name: 'Math: CPS Average',
                color: "#9E241D",
                dashStyle: "ShortDash",
                data: [69,71,69,74,78,81],
                pointStart: Date.UTC(2007, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            },*/			
            {
             	name: 'Science',
                color: "#A9B80D",
                data: <%= raw @school.science.sort_by{|s| s.year_from}.collect{|s| s.percent}.to_json %>,
                pointStart: Date.UTC(<%= raw @school.science.first.year_to.to_i %>, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year

            }/* ,{
             	name: 'Science: CPS Average',
                color: "#A9B80D",
                dashStyle: "ShortDash",
                data: ['',56,'','',73,''],
                pointStart: Date.UTC(2007, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            }*/			
            ],
            subtitle: { text: '' }, 
            title: { text: '' },
            tooltip: {
                borderColor: "#ccc",
                formatter: function() {
                	var s = "<strong>" + Highcharts.dateFormat('%Y', this.x) + "</strong>";
                	
                	$.each(this.points, function(i, point){
                		if (point.y > 0)
	                		s += "<br />" + point.series.name + ": " + point.y + "%";
                	});
                	
                	return s;
                },
                shared: true
            },
            xAxis: {
            	gridLineColor: "#dfdfdf",
                gridLineWidth: 1,
                tickLength: 0,
            	type: "datetime"
            },
            yAxis: {
            	gridLineColor: "#dfdfdf",
            	max: 100,
            	min: 0,
            	labels: {
	            	formatter: function(){
		            	return this.value + "%";
	            	}
            	},
            	lineWidth: 1,
            	tickLength: 0,
                title: {
                	style: { fontWeight: "normal" },
                    text: 'Students that meet or exceed state standards'
                }
            }
        });
        
        //MOBILITY CHART
        mobility_chart = new Highcharts.Chart({
            chart: {
                renderTo: 'chart-mobility',
                type: 'line'
            },
            credits: { enabled:false },
            series: [
            {
            	color: "#3b5cb2",
                name: 'Mobility rate',
                data: <%= raw @school.mobilities.sort_by{|m| m.year_to }.map{|m| m.rate}.to_json %>, 
                pointStart: Date.UTC(<%= raw @school.mobilities.first.year_to.to_i %>, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            }, {
             	color: "#3b5cb2",
             	name: 'CPS average mobility rate',
             	dashStyle: "ShortDash",
                data: [26.6, 25.2, 24.8, 24.5, 24.4, 24.0, 26.8, 22.4, 23.3, 18.8, 18.7, 17.9, 18.3],
                pointStart: Date.UTC(2000, 1, 1),
                pointInterval: 365 * 24 * 3600 * 1000 //one year
            }
            ],
            legend: { 
	        	borderWidth: 0,
	        	itemWidth: 130,
	        	symbolWidth: 40
            },
            plotOptions: {
	            line: {
	            	marker: {
		            	lineColor: "#fff",
		            	lineWidth: 1.5,
		            	radius: 5,
		            	symbol: "circle"
	            	}
	            }
            },
            subtitle: { text: ''},
            title: { text: ''},
            tooltip: {
                formatter: function() {
                        var s = "<strong>" + Highcharts.dateFormat('%Y', this.x) + "</strong>";
                	
                	$.each(this.points, function(i, point){
                		if (point.y > 0)
	                		s += "<br />" + point.series.name + ": " + point.y + "%";
                	});
                	
                	return s;                
                },
                shared: true
            },
            xAxis: {
            	type: "datetime",
                gridLineColor: "#dfdfdf",
                gridLineWidth: 1,
                tickLength: 0
            },
            yAxis: {
            	gridLineColor: "#dfdfdf",
            	min: 0,
            	labels: {
	            	formatter: function(){
		            	return this.value;
	            	}
            	},
            	lineWidth: 1,
            	tickLength: 0,
                title: {
                    text: 'Mobility rate'
                }
            }
        });
        
        //RACE CHART
    	race_chart = new Highcharts.Chart({
	            chart: {
	            	renderTo: 'race-chart',
	                type: 'bar'
	            },
	            credits: {enabled: false},
	            legend: { enabled: false },
	            plotOptions: {
	                bar: {
	                    borderWidth: 0,
	                    dataLabels: {
	                        enabled: true,
	                        formatter: function(){
		                        return Highcharts.numberFormat(this.y, 0) + "%";
	                        }
	                    },
	                    groupPadding: 0,
	                    states: {
				            hover: { enabled: false }
			            }
	                }
	            },
	            series: [{
	                data: <%= raw @school.races.map{ |r| r.percent} %>
	            }],
	            title: { text: '' },
	            tooltip: { enabled: false },
	            xAxis: {
	                categories: <%= raw @school.races.map{ |r| r.ethnicity }.inspect %>,
	                tickLength: 0
	            },
	            yAxis: {
	            	gridLineWidth: 0,
	                labels: { enabled: false },
	                title: { text: '' }
	            }
	    });
	    
	    //Demographics
	    dem_chart = new Highcharts.Chart({
	            chart: {
	            	renderTo: 'demographic-chart',
	                type: 'bar'
	            },
	            credits: {enabled: false},
	            legend: { enabled: false },
	            plotOptions: {
	                bar: {
	                    borderWidth: 0,
	                    dataLabels: {
	                        enabled: true,
	                        formatter: function(){
		                        return Highcharts.numberFormat(this.y, 0) + "%";
	                        }
	                    },
	                    groupPadding: 0,
	                    states: {
				            hover: { enabled: false }
			            }
	                }
	            },
	            series: [{
	                data: <%= raw @school.demographics.where('year_from = 2012').map{ |item| item.percent } %>
	            }],
	            title: { text: '' },
	            tooltip: { enabled: false },
	            xAxis: {
	                categories: <%= raw @school.demographics.sort_by{|d| d.year_from}.map{ | item | item.category }.uniq %>,
	                tickLength: 0
	            },
	            yAxis: {
	            	gridLineWidth: 0,
	                labels: { enabled: false },
	                title: { text: '' }
	            }
	    });

	    

    });
    
});

</script>

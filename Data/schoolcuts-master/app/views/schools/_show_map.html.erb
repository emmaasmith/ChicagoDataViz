<!-- Map Script Section -->
<script type="text/javascript"
    src="http://maps.google.com/maps/api/js?sensor=false&v=3.14">
  </script>
  <script type="text/javascript">
    var map;
    var layerl0;
    
    function initialize() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: new google.maps.LatLng( <%= @address.latitude %>, <%= @address.longitude %>),
        zoom: 13,
        scrollwheel: false,
        minZoom: 13,
        maxZoom: 16
      });
      var style = [
        {
          featureType: 'all',
          elementType: 'all',
          stylers: [
            { saturation: -100 },
            { "gamma": 1.75 }
          ]
        }
      ];
      var styledMapType = new google.maps.StyledMapType(style, {
        map: map,
        name: 'Styled Map'
      });
      map.mapTypes.set('map-style', styledMapType);
      map.setMapTypeId('map-style');

        //var marker = new google.maps.Marker({
        //    position: new google.maps.LatLng( <%= @address.latitude %>, <%= @address.longitude %>),
        //    map: map,
        //    title: '<%= @school.short_name %>'
        //});
         
      var circleOptions = {
        strokeColor: "#4b58a6",
        strokeOpacity: 0.5,
        strokeWeight: 4,
        fillColor: "#4b58a6",
        fillOpacity: 0,
        map: map,
        center: new google.maps.LatLng( <%= @address.latitude %>, <%= @address.longitude %>),
        clickable: false,
        zIndex: -1,
        radius: 1610
      };
      var onefiveOptions = {
        strokeColor: "#a64b58",
        strokeOpacity: 0.5,
        strokeWeight: 4,
        fillColor: "#a64b58",
        fillOpacity: 0,
        map: map,
        center: new google.maps.LatLng( <%= @address.latitude %>, <%= @address.longitude %>),
        clickable: false,
        zIndex: -1,
        radius: 2415
      };
      
      var thisCPSid = <%= @school.cps_id %>
      onefiveRadiusCircle = new google.maps.Circle(onefiveOptions);
      searchRadiusCircle = new google.maps.Circle(circleOptions);
      var LocationColumn = "Latitude"

      var whereClause = "ST_INTERSECTS(" + "Latitude" + ", CIRCLE(LATLNG" + new google.maps.LatLng( <%= @address.latitude %>, <%= @address.longitude %>) + "," + 2415 + "))";
	  /*
function query(){
		  var queryStr = [];
		  queryStr.push("SELECT " + "'levelnum', 'Value Added Math Score'");
		  queryStr.push(" FROM "+"1z1-EA7NoUQwox20w4VpjfMd_oGJ15h_JWVzQ8OA");     
		  queryStr.push(" WHERE "+ whereClause);
		  var sql = encodeURIComponent(queryStr.join(" "));
		  console.log(sql);
		  //$.ajax({url: "https://www.googleapis.com/fusiontables/v1/query?sql="+sql+"&callback="+callback+"&key=AIzaSyBZmv4Q6UbEd83q1GXlm6su2tMpwa18yrQ", dataType:"jsonp"});
	  }
	  query();
    //console.log(isBetter(3, 70, 38, 0, 1));
*/    var test = 1 ;
	  var id = 307;
	  var closing_status = <%= @school.closing_status.nil? ? -1 : @school.closing_status %>;
    
	  var receiving_schools = [<%= (@school.receiving_schools().size > 0) ? @school.receiving_schools() : 0 %>];
    var colocating_schools = [<%= (@school.colocating_schools().size > 0) ? @school.colocating_schools() : 0 %>];
    var blue_schools = [<%= (@school.colocating_schools().size > 0) ? @school.colocating_schools() : 0 %>, <%= (@school.receiving_schools().size > 0) ? @school.receiving_schools() : 0 %>];
	  var sending_schools = [<%= (@school.sending_schools().size > 0) ? @school.sending_schools() : 0 %>];
	  var new_building = <%= @school.new_building("id")%>;
	  
	  console.log(new_building);

    var whereBoundary = ''
	  
    if (receiving_schools != 0)
    {
        whereBoundary = "'SchoolCuts ID' in ("+ receiving_schools +")"
    }
    else
    {
        whereBoundary = "'SchoolCuts ID' =  <%= @school.id %>"
    }
      
      layerBoundaries = new google.maps.FusionTablesLayer({
        query: {
          select: "col0\x3e\x3e1",
          from: "1u2jMELhnoivuc678nMUn23dIFZwiqAnADsZX2u0",
          where: whereBoundary
        },
        map: map,
        styleId: 2,
        templateId: 2
        });


      layerl0 = new google.maps.FusionTablesLayer({
        query: {
          select: LocationColumn,
          from: "1rwYoQj6HhxjrdFnCQ4wSHYx43ilxMdPjnusdkSc",
          where: whereClause
        },
        map: map,
        styleId: 2,
        templateId: 2,
        styles: [{ 				
        	where: "'SchoolCuts ID' in (" + blue_schools + ")",
          markerOptions: {
            iconName: "blu_blank"
          }
        },{       
        where: "'SchoolCuts ID' in (" + sending_schools + ")",
          markerOptions: {
            iconName: "red_blank"
          }
        },{ 
          where: "'SchoolCuts ID' =  <%= @school.id %>  AND 'ReceivingStatus' > 0",
          markerOptions: {
            iconName: "large_blue"
          }
        },{     
        where: "'SchoolCuts ID' =  <%= @school.id %>  AND col52\x3e\x3e0 in (1, 6)",
          markerOptions: {
            iconName: "large_red"
          }
        },{        
		    where: "'SchoolCuts ID' in (" + new_building + ")",
        	markerOptions: {
        		iconName: "ltblu_blank"
        	}	
        }]
      });

      layerThis = new google.maps.FusionTablesLayer({
        query: {
          select: LocationColumn,
          from: '1rwYoQj6HhxjrdFnCQ4wSHYx43ilxMdPjnusdkSc',
          where: "'SchoolCuts ID' =  <%= @school.id %>  AND col52\x3e\x3e0 in (2, 4, 5, 7)"
        },
        map: map,
        styleId: 4,
        templateId: 2
		  });
      
      
      
    }
    google.maps.event.addDomListener(window, 'load', initialize);
    
    /*
    var thisLevel = <%= @school.level %>;
    var thisIsat = 76.2;
    var thisPolicyPts = 36;
    var thisValueMath = -0.3; 
    var thisValueReading = 0.8;
    
    function isBetter(level){
	    console.log(level);
    }
    
    
	    function isBetter(level, isat, policyPts, valueMath, valueReading){
    	var countTrue = 0;
    	
    	
    	if(thisLevel > level)
    		return 1;
    	
    	if(thisIsat < isat) 
    		countTrue++;	
    	if(thisPolicyPts < policyPts)
    		countTrue++;
    	if(thisValueMath < valueMath)
    		countTrue++;
    	if(thisValueReading < valueReading)
    		countTrue++;
    		
    	if(countTrue>=3) 
    		return 1;
    	else return 0;
    }

	function callback(json) {
	  MapsLib.handleError(json);
	  var data = json["rows"];
	  var template = "";
	
	  console.log(data[0][0]);
	}
	*/
  </script>
